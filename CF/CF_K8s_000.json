{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Description": "**WARNING** This template creates a new VPC and all necessary AWS Resources including EC2 Instances. You will be billed by AWS for the AWS Resources used if you create a stack from this template.",

 "Mappings": {
  "IPAddress": {
   "VPC": {
    "PreFix": "10.1"
   },
   "K8sNode": {
    "InFix": "1"
   },
   "K8sMaster1": {
    "SufFix": "11"
   },
   "K8sWorker1": {
    "SufFix": "101"
   },
   "K8sWorker2": {
    "SufFix": "102"
   },
   "K8sWorker3": {
    "SufFix": "103"
   },
   "K8sWorker4": {
    "SufFix": "104"
   },
   "K8sWorker5": {
    "SufFix": "105"
   },
   "K8sWorker6": {
    "SufFix": "106"
   },
   "K8sWorker7": {
    "SufFix": "107"
   },
   "K8sWorker8": {
    "SufFix": "108"
   },
   "K8sWorker9": {
    "SufFix": "109"
   },
   "K8sPod": {
    "CIDR": "10.244.0.0/16"
   },
   "K8sService": {
    "CIDR": "10.96.0.0/12"
   }
  },
  "RegionAMI": {
   "af-south-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-075520a13dc442833",
      "arm64": "ami-06aa574bdb0802086"
     },
     "20.04": {
      "amd64": "ami-0c85b1d3c76beeb34",
      "arm64": "ami-0bc3e054e358e0568"
     }
    }
   },
   "ap-east-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0a4e8c6468d92c210",
      "arm64": "ami-05b55058097a955d7"
     },
     "20.04": {
      "amd64": "ami-0cb175a4bd5e1857b",
      "arm64": "ami-028fd3ee5bf847e2a"
     }
    }
   },
   "ap-northeast-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0620ef6ee255ea559",
      "arm64": "ami-0588207319c85e253"
     },
     "20.04": {
      "amd64": "ami-03f396733f38d658b",
      "arm64": "ami-0e08732bb3f9ad0eb"
     }
    }
   },
   "ap-south-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0c0490c60db84298f",
      "arm64": "ami-0d69d4a1644d0352f"
     },
     "20.04": {
      "amd64": "ami-0c1566e39d136b269",
      "arm64": "ami-0d12ee8d98a5d85b1"
     }
    }
   },
   "ap-southeast-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-09b5aaebc21c273eb",
      "arm64": "ami-07a30331c4ec37164"
     },
     "20.04": {
      "amd64": "ami-084009f26f70a7c0b",
      "arm64": "ami-066c736541a61c4a0"
     }
    }
   },
   "ca-central-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-05c0545bdc0bbff91",
      "arm64": "ami-08a20fcaf44b82721"
     },
     "20.04": {
      "amd64": "ami-0fc1738fbeaf067cf",
      "arm64": "ami-0c316e78a547892a5"
     }
    }
   },
   "eu-central-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-08db015a4afd75546",
      "arm64": "ami-04b1b136efb7988cf"
     },
     "20.04": {
      "amd64": "ami-078ca7285317cfe91",
      "arm64": "ami-0989c7c523fe5753d"
     }
    }
   },
   "eu-north-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-05916395833cb9690",
      "arm64": "ami-033b5653d52eb5a16"
     },
     "20.04": {
      "amd64": "ami-0f7828a9c19ff4a9e",
      "arm64": "ami-0b86cecfc8176e5af"
     }
    }
   },
   "eu-south-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-03839a9ab91b19abc",
      "arm64": "ami-024a00245ef0a590d"
     },
     "20.04": {
      "amd64": "ami-07bb6ad16aa5572c5",
      "arm64": "ami-05bd368a90e3e7cfa"
     }
    }
   },
   "eu-west-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0f5b07b31937d4275",
      "arm64": "ami-091303fb47b39c631"
     },
     "20.04": {
      "amd64": "ami-06c5b2809791cf59c",
      "arm64": "ami-0de2831d62e664a4e"
     }
    }
   },
   "me-south-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-019ba1b47cfb5211e",
      "arm64": "ami-07ecba43392157832"
     },
     "20.04": {
      "amd64": "ami-003956846b724fede",
      "arm64": "ami-0830333f3a3b8d188"
     }
    }
   },
   "sa-east-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-092dc94ff1b65b5c2",
      "arm64": "ami-012575a8937727318"
     },
     "20.04": {
      "amd64": "ami-045a803b4a81b4175",
      "arm64": "ami-00f68a640b5dff2c3"
     }
    }
   },
   "us-east-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0e4d932065378fd3d",
      "arm64": "ami-09ecbfbe7ab087fb0"
     },
     "20.04": {
      "amd64": "ami-01de8ddb33de7a3d3",
      "arm64": "ami-0b46d8cdf02223688"
     }
    }
   },
   "us-west-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-05620e35978c63272",
      "arm64": "ami-014a389295a649304"
     },
     "20.04": {
      "amd64": "ami-009c002b1cd1b34da",
      "arm64": "ami-04f175f1402a68daf"
     }
    }
   },
   "cn-north-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-04d2bfd6d1ad04148",
      "arm64": "ami-0bcd7be0127093ece"
     },
     "20.04": {
      "amd64": "ami-0b6277ff0310832fb",
      "arm64": "ami-09c84bcb24385eae0"
     }
    }
   },
   "cn-northwest-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-035fe42779786b0d8",
      "arm64": "ami-0c82266e19d47a39f"
     },
     "20.04": {
      "amd64": "ami-06ada3264ec0d22b4",
      "arm64": "ami-0a8775a41b35c0df8"
     }
    }
   },
   "us-gov-east-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0448311ded7d81e94",
      "arm64": "ami-01126c6d455c129d2"
     },
     "20.04": {
      "amd64": "ami-0cb7240ebe7a02450",
      "arm64": "ami-0ce79d6fa9e9a242e"
     }
    }
   },
   "us-gov-west-1": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0b0e99fc26b846798",
      "arm64": "ami-0f69d8bba30708f42"
     },
     "20.04": {
      "amd64": "ami-0777d7afb149b4542",
      "arm64": "ami-04a2f96ef9b12b2b1"
     }
    }
   },
   "ap-northeast-2": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0f77aba17625db03b",
      "arm64": "ami-0ad9024ffcffc52ac"
     },
     "20.04": {
      "amd64": "ami-09378a0a8e36fabc7",
      "arm64": "ami-004e60810746b7f8b"
     }
    }
   },
   "ap-southeast-2": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0b643a2ce5f48199a",
      "arm64": "ami-0ca133384d447f902"
     },
     "20.04": {
      "amd64": "ami-0ad3265c866331223",
      "arm64": "ami-0042eaf871ef4355b"
     }
    }
   },
   "eu-west-2": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0a14509f661bf2964",
      "arm64": "ami-09740bfdcd34604a0"
     },
     "20.04": {
      "amd64": "ami-0e312244e15c975b0",
      "arm64": "ami-07888f2a73d223060"
     }
    }
   },
   "us-east-2": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-063e88ad6c9af427d",
      "arm64": "ami-05bcce79c6ca98b65"
     },
     "20.04": {
      "amd64": "ami-051d99278ba9fdc66",
      "arm64": "ami-00393c6b4ca02b918"
     }
    }
   },
   "us-west-2": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0b7d93899b51ff83b",
      "arm64": "ami-0eef97ed575da67fa"
     },
     "20.04": {
      "amd64": "ami-0fc272c9b2d204826",
      "arm64": "ami-0e96c6102dc1ebe17"
     }
    }
   },
   "ap-northeast-3": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-06947c2f8a47debf3",
      "arm64": "ami-0f35b44112e6373e6"
     },
     "20.04": {
      "amd64": "ami-02a8547248b1cc18b",
      "arm64": "ami-02b41af1c35e46c89"
     }
    }
   },
   "eu-west-3": {
    "ubuntu": {
     "18.04": {
      "amd64": "ami-0b722faecb702e094",
      "arm64": "ami-0abc3ac76681fdf72"
     },
     "20.04": {
      "amd64": "ami-08d3d8790db280475",
      "arm64": "ami-09970d0bbfea77f3e"
     }
    }
   }
  },
 },

 "Conditions": {
  "CreateWorkerNode2": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "2" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "3" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "4" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "5" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "6" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "7" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode3": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "3" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "4" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "5" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "6" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "7" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode4": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "4" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "5" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "6" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "7" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode5": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "5" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "6" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "7" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode6": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "6" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "7" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode7": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "7" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode8": { "Fn::Or": [ { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "8" ] }, { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] } ] },
  "CreateWorkerNode9": { "Fn::Equals": [ { "Ref": "NumberOfK8sWorkerNode" }, "9" ] }
 },

 "Parameters": {
  "TagPreFix": {
   "Type": "String",
   "Default": "CF",
   "Description": "Prefix to be given to all possible resources created by this stack-template."
  },
  "K8sNodeImageID": {
   "Type": "String",
   "Default": "Default",
   "AllowedPattern": "^([aA][mM][iI]\\-)([0-9a-zA-Z]{8}|[0-9a-zA-Z]{17})$|^Default$",
   "Description": "Provide a valid AMI ID of Ubuntu Server for the K8s Nodes, or use the default AMI ID based on https://cloud-images.ubuntu.com/locator/ec2/ ."
  },
  "K8sNodeInstanceType": {
   "Type": "String",
   "Default": "m5.xlarge",
   "Description": "Provide a valid Instance Type for the K8s Nodes."
  },
  "NumberOfK8sWorkerNode": {
   "Type": "String",
   "Default": "3",
   "AllowedValues": [ "1", "2", "3", "4", "5", "6", "7", "8", "9" ],
   "AllowedPattern": "^[1-9]{1}$",
   "Description": "Number of K8s Worker Node(s) to be created."
  },
  "EC2SSHKeyPair": {
   "Type": "AWS::EC2::KeyPair::KeyName",
   "Description": "EC2 KeyPair to enable SSH access to the EC2 instances. Select the SSH KeyPair you have access to."
  },
  "NTPServer": {
   "Default": "0.pool.ntp.org",
   "Description": "NTP server for this implementation",
   "Type": "String"
  },
  "TimeZone": {
   "Default": "Asia/Singapore",
   "AllowedValues": [ "Asia/Singapore", "Asia/Tokyo", "Asia/Seoul" ],
   "Description": "Enter the Olson timezone string from /usr/share/zoneinfo. The default is 'UTC'. See the TZ column here (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for valid optional values. For example, 'US/Eastern'.",
   "Type": "String"
  }
 },

 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "Name Tags Parameters"
     },
     "Parameters": [
      "TagPreFix"
     ]
    },
    {
     "Label": {
      "default": "Common CloudFormation Parameters"
     },
     "Parameters": [
      "K8sNodeImageID",
      "K8sNodeInstanceType",
      "NumberOfK8sWorkerNode",
      "EC2SSHKeyPair"
     ]
    },
    {
     "Label": {
      "default": "Common Operating System Parameters"
     },
     "Parameters": [
      "NTPServer",
      "TimeZone"
     ]
    }
   ],
   "ParameterLabels": {
    "TagPreFix": {
     "default": "PreFix for Name Tags"
    },
    "K8sNodeImageID": {
     "default": "K8s Nodes' Image ID"
    },
    "K8sNodeInstanceType": {
     "default": "K8s Nodes' Instance Type"
    },
    "NumberOfK8sWorkerNode": {
     "default": "Number of K8s Worker Node(s)"
    },
    "EC2SSHKeyPair": {
     "default": "EC2 SSH Key-Pair"
    },
    "NTPServer": {
     "default": "NTP Server used by Big-IP"
    },
    "TimeZone": {
     "default": "Time Zone setting used by Big-IP"
    }
   }
  }
 },



 "Resources": {
  "VPC": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "EnableDnsSupport": "true",
    "EnableDnsHostnames": "true",
    "CidrBlock": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, "0.0/16" ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "VPC" ] ] } } ]
   }
  },
  "K8sNodeSubnet": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": { "Ref": "VPC" },
    "AvailabilityZone": { "Fn::Select": [ "0", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
    "MapPublicIpOnLaunch": "true",
    "CidrBlock": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, "0/24" ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sNodeSubnet" ] ] } } ]
   }
  },
  "InternetGateway": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "InternetGateway" ] ] } } ]
   }
  },
  "VPCGatewayAttachment": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": { "Ref": "VPC" },
    "InternetGatewayId": { "Ref": "InternetGateway" }
   }
  },
  "K8sNodeRouteTable": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": { "Ref": "VPC" },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sNodeRouteTable" ] ] } } ]
   }
  },
  "K8sNodeRoute": {
   "Type": "AWS::EC2::Route",
   "DependsOn": "VPCGatewayAttachment",
   "Properties": {
    "RouteTableId": { "Ref": "K8sNodeRouteTable" },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": { "Ref": "InternetGateway" }
   }
  },
  "K8sNodeSubnetRouteTableAssociation": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "RouteTableId": { "Ref": "K8sNodeRouteTable" }
   }
  },
  "K8sNodeNetworkAcL": {
   "Type": "AWS::EC2::NetworkAcl",
   "Properties": {
    "VpcId": { "Ref": "VPC" },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sNodeNetworkAcL" ] ] } } ]
   }
  },
  "InboundTCPK8sNodeNetworkAcLEntry": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" },
    "RuleNumber": "100",
    "Protocol": "6",
    "RuleAction": "allow",
    "Egress": "false",
    "CidrBlock": "0.0.0.0/0",
    "PortRange": { "From": "0", "To": "65535" }
   }
  },
  "InboundUDPK8sNodeNetworkAcLEntry": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" },
    "RuleNumber": "200",
    "Protocol": "17",
    "RuleAction": "allow",
    "Egress": "false",
    "CidrBlock": "0.0.0.0/0",
    "PortRange": { "From": "0", "To": "65535" }
   }
  },
  "InboundICMPK8sNodeNetworkAcLEntry": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" },
    "RuleNumber": "300",
    "Protocol": "1",
    "Icmp": { "Code": "-1", "Type": "-1" },
    "RuleAction": "allow",
    "Egress": "false",
    "CidrBlock": "0.0.0.0/0"
   }
  },
  "OutboundTCPK8sNodeNetworkAcLEntry": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" },
    "RuleNumber": "100",
    "Protocol": "6",
    "RuleAction": "allow",
    "Egress": "true",
    "CidrBlock": "0.0.0.0/0",
    "PortRange": { "From": "0", "To": "65535" }
   }
  },
  "OutboundUDPK8sNodeNetworkAcLEntry": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" },
    "RuleNumber": "200",
    "Protocol": "17",
    "RuleAction": "allow",
    "Egress": "true",
    "CidrBlock": "0.0.0.0/0",
    "PortRange": { "From": "0", "To": "65535" }
   }
  },
  "OutboundICMPK8sNodeNetworkAcLEntry": {
   "Type": "AWS::EC2::NetworkAclEntry",
   "Properties": {
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" },
    "RuleNumber": "300",
    "Protocol": "1",
    "Icmp": { "Code": "-1", "Type": "-1" },
    "RuleAction": "allow",
    "Egress": "true",
    "CidrBlock": "0.0.0.0/0"
   }
  },
  "K8sNodeSubnetNetworkAcLAssociation": {
   "Type": "AWS::EC2::SubnetNetworkAclAssociation",
   "Properties": {
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "NetworkAclId": { "Ref": "K8sNodeNetworkAcL" }
   }
  },
  "K8sNodeSecurityGroup": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security Group for K8s Nodes",
    "VpcId": { "Ref": "VPC" },
    "SecurityGroupEgress": [ { "IpProtocol": "-1", "CidrIp": "0.0.0.0/0" } ],
    "SecurityGroupIngress": [ { "IpProtocol": "-1", "CidrIp": "0.0.0.0/0" } ],
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sNodeSecurityGroup" ] ] } } ]
   }
  },
  "K8sMaster1EIP": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sMaster1EIP" ] ] } } ]
   }
  },
  "K8sWorker1EIP": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker1EIP" ] ] } } ]
   }
  },
  "K8sWorker2EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode2",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker2EIP" ] ] } } ]
   }
  },
  "K8sWorker3EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode3",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker3EIP" ] ] } } ]
   }
  },
  "K8sWorker4EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode4",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker4EIP" ] ] } } ]
   }
  },
  "K8sWorker5EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode5",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker5EIP" ] ] } } ]
   }
  },
  "K8sWorker6EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode6",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker6EIP" ] ] } } ]
   }
  },
  "K8sWorker7EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode7",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker7EIP" ] ] } } ]
   }
  },
  "K8sWorker8EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode8",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker8EIP" ] ] } } ]
   }
  },
  "K8sWorker9EIP": {
   "Type": "AWS::EC2::EIP",
   "Condition": "CreateWorkerNode9",
   "Properties": {
    "Domain": "vpc",
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker9EIP" ] ] } } ]
   }
  },
  "K8sMaster1NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Properties": {
    "Description": "Network Interface for K8s Master 1",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sMaster1", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sMaster1NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker1NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Properties": {
    "Description": "Network Interface for K8s Worker 1",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker1", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker1NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker2NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode2",
   "Properties": {
    "Description": "Network Interface for K8s Worker 2",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker2", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker2NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker3NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode3",
   "Properties": {
    "Description": "Network Interface for K8s Worker 3",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker3", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker3NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker4NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode4",
   "Properties": {
    "Description": "Network Interface for K8s Worker 4",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker4", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker4NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker5NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode5",
   "Properties": {
    "Description": "Network Interface for K8s Worker 5",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker5", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker5NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker6NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode6",
   "Properties": {
    "Description": "Network Interface for K8s Worker 6",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker6", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker6NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker7NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode7",
   "Properties": {
    "Description": "Network Interface for K8s Worker 7",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker7", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker7NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker8NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode8",
   "Properties": {
    "Description": "Network Interface for K8s Worker 8",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker8", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker8NetworkInterface" ] ] } } ]
   }
  },
  "K8sWorker9NetworkInterface": {
   "Type": "AWS::EC2::NetworkInterface",
   "Condition": "CreateWorkerNode9",
   "Properties": {
    "Description": "Network Interface for K8s Worker 9",
    "GroupSet": [ {"Ref": "K8sNodeSecurityGroup"} ],
    "SourceDestCheck": "false",
    "SubnetId": { "Ref": "K8sNodeSubnet" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker9", "SufFix" ] } ] ] },
    "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "K8sWorker9NetworkInterface" ] ] } } ]
   }
  },
  "K8sMaster1EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sMaster1EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sMaster1NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sMaster1", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker1EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker1EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker1NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker1", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker2EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode2",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker2EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker2NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker2", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker3EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode3",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker3EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker3NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker3", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker4EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode4",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker4EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker4NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker4", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker5EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode5",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker5EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker5NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker5", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker6EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode6",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker6EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker6NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker6", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker7EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode7",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker7EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker7NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker7", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker8EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode8",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker8EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker8NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker8", "SufFix" ] } ] ] }
   }
  },
  "K8sWorker9EIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Condition": "CreateWorkerNode9",
   "Properties": {
    "AllocationId": { "Fn::GetAtt": [ "K8sWorker9EIP", "AllocationId" ] },
    "NetworkInterfaceId": { "Ref": "K8sWorker9NetworkInterface" },
    "PrivateIpAddress": { "Fn::Join": [ ".", [ { "Fn::FindInMap": [ "IPAddress", "VPC", "PreFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sNode", "InFix" ] }, { "Fn::FindInMap": [ "IPAddress", "K8sWorker9", "SufFix" ] } ] ] }
   }
  },








   "LAMPServer": {
     "Type": "AWS::EC2::Instance",
     "Properties": {
       "ImageId": { "Fn::If": [ "DefaultLAMPImageID", { "Fn::FindInMap": [ "RegionAMIMap", { "Ref": "AWS::Region" }, "LAMP" ] }, { "Ref": "LAMPServerImageID" } ] },
       "InstanceType": { "Ref": "LAMPServerInstanceType" },
       "NetworkInterfaces": [ { "NetworkInterfaceId": {"Ref": "ServerManagementNetworkInterface"}, "DeviceIndex": "0" },
                               { "NetworkInterfaceId": {"Ref": "ServerTrafficNetworkInterface"}, "DeviceIndex": "1" } ],
       "KeyName": { "Ref": "EC2SSHKeyPair" },
       "Tags": [
         {
           "Key": "Name",
           "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "LAMPServer" ] ] }
         }
       ],
       "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
         "#!/bin/bash", "\n",
         "\n",
         "sudo mv /etc/network/interfaces /etc/network/interfaces.vmimport", "\n",
         "sudo mv /etc/network/vmimport.interfaces /etc/network/interfaces", "\n",
         "sudo touch /etc/network/UserData`date +%Y%m%d%H%M%S`.Access", "\n"
       ]]}}
     }
   },



   "WindowsServer": {
     "Type": "AWS::EC2::Instance",
     "Properties": {
       "ImageId": { "Fn::If": [ "DefaultWindowsImageID", { "Fn::FindInMap": [ "RegionAMIMap", { "Ref": "AWS::Region" }, "Windows" ] }, { "Ref": "WindowsServerImageID" } ] },
       "InstanceType": { "Ref": "WindowsServerInstanceType" },
       "NetworkInterfaces": [ { "NetworkInterfaceId": {"Ref": "WindowsServerTrafficNetworkInterface"}, "DeviceIndex": "0" },
                               { "NetworkInterfaceId": {"Ref": "WindowsServerManagementNetworkInterface"}, "DeviceIndex": "1" } ],
       "KeyName": { "Ref": "EC2SSHKeyPair" },
       "Tags": [
         {
           "Key": "Name",
           "Value": { "Fn::Join": [ "_", [ { "Ref": "TagPreFix" }, { "Ref": "AWS::StackName" }, "WindowsServer" ] ] }
         }
       ]
     }
   },










 "BigIPServiceDiscoveryAccessRole": {
  "Properties": {
   "AssumeRolePolicyDocument": {
    "Statement": [
     {
      "Action": [
       "sts:AssumeRole"
      ],
      "Effect": "Allow",
      "Principal": { "Service": [ "ec2.amazonaws.com" ] }
     }
    ],
    "Version": "2012-10-17"
   },
   "Path": "/",
   "Policies": [
    {
     "PolicyDocument": {
      "Statement": [
       {
        "Action": [
         "ec2:DescribeInstances",
         "ec2:DescribeInstanceStatus",
         "ec2:DescribeAddresses",
         "ec2:AssociateAddress",
         "ec2:DisassociateAddress",
         "ec2:DescribeNetworkInterfaces",
         "ec2:DescribeNetworkInterfaceAttribute",
         "ec2:DescribeRouteTables",
         "ec2:ReplaceRoute",
         "ec2:assignprivateipaddresses",
         "sts:AssumeRole"
        ],
        "Effect": "Allow",
        "Resource": [
         "*"
        ]
       }
      ],
      "Version": "2012-10-17"
     },
     "PolicyName": "BigipServiceDiscoveryPolicy"
    }
   ]
  },
  "Type": "AWS::IAM::Role"
 },
 "BigIPServiceDiscoveryProfile": {
  "Properties": {
   "Path": "/",
   "Roles": [
    {
     "Ref": "BigIPServiceDiscoveryAccessRole"
    }
   ]
  },
  "Type": "AWS::IAM::InstanceProfile"
 }



 },



  "Outputs": {
    "LAMPServerManagementIPAddress": {
      "Description": "LAMP Server's Management IP Address",
      "Value": { "Ref": "ServerEIP" }
    },
    "WindowsServerManagementIPAddress": {
      "Description": "Windows Server's Management IP Address",
      "Value": { "Ref": "WindowsServerEIP" }
    },
    "BigIPManagementIPAddress": {
      "Description": "Big-IP's Management IP Address",
      "Value": { "Ref": "BigIPEIP" }
    },
    "BigIPManagementUserInterface": {
      "Description": "Big-IP's Management User Interface URL/IP Address",
      "Value": { "Fn::Join": [ "", [ "https://", { "Ref": "BigIPEIP" } ] ] }
    },

    "SelfIPAddress": {
      "Description": "Big-IP External Interface's Self IP Address",
      "Value": { "Ref": "SelfEIP" }
    },
    "StaticWebServerIPAddress": {
      "Description": "Static Web Server's URL/IP Address",
      "Value": { "Fn::Join": [ "", [ "http://", { "Ref": "StaticWebServerEIP" } ] ] }
    },
    "DVWAIPAddress": {
      "Description": "DVWA's URL/IP Address",
      "Value": { "Fn::Join": [ "", [ "http://", { "Ref": "DVWAEIP" } ] ] }
    },
    "HackazonIPAddress": {
      "Description": "Hackazon's URL/IP Address",
      "Value": { "Fn::Join": [ "", [ "http://", { "Ref": "HackazonEIP" } ] ] }
    }



  }



}
